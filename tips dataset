import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

df=sns.load_dataset('tips')
df.head()
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import mean_squared_error
le=LabelEncoder()
df.isnull().sum()
df["sex"] = le.fit_transform(df["sex"])
df["time"] = le.fit_transform(df["time"])
df.dtypes
df["smoker"] = le.fit_transform(df["smoker"])
df["day"] = le.fit_transform(df["day"])
df.dtypes
df["tip"] = df["tip"].astype(float)

correlation = df[['tip', 'total_bill']].corr()
sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')

plt.title("Correlation between 'tip' and 'total_bill'")
plt.show()
sns.histplot(data=df,x="total_bill",y="tip",hue="sex")

X = df[["sex", "total_bill", "size"]] 
y = df["tip"] 


from sklearn.metrics import mean_squared_error
model=LinearRegression()
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error on Test Set: {mse}')

import streamlit as st
with open('tip_prediction_model.pkl', 'wb') as file:
 pickle.dump(model, file)

print("Model saved as 'tip_prediction_model.pkl'")

pip install streamlit
import streamlit as st
import pickle
import numpy as np

# Load the pickled model
with open('tip_prediction_model.pkl', 'rb') as file:
 model = pickle.load(file)

# Streamlit app
st.title("Tip Prediction Based on Total Bill")

# Description
st.write("""
This app predicts the tip based on the total bill amount using a pre-trained Linear Regression model.
""")

# Input for total bill
total_bill_input = st.number_input("Enter the total bill amount", min_value=0.0, value=20.0, step=1.0)

# Prediction
predicted_tip = model.predict(np.array([[total_bill_input]]))

# Display the prediction
st.write(f"The predicted tip for a total bill of ${total_bill_input} is ${predicted_tip[0]:.2f}")
